#!/bin/bash
# A script to backup server to an object storage

# Check if running as root user
if [[ $EUID -ne 0 ]]; then
    echo "Please run this script as root or using sudo."
    exit 1
fi

# Get the home directory of the current user
USER_HOME=$(eval echo ~"$SUDO_USER")

# Set the backup data variables
BACKUP_DIR="/opt/backup"
BACKUP_DATE=$(date +%Y-%m-%d)
BACKUP_HISTORY=2

# Create backup directory
mkdir -p "$BACKUP_DIR"

# Create the backup archive excluding the backup directory itself
tar -cvzf "/opt/backup/backup-$BACKUP_DATE.tar.gz" --directory=/ \
    --exclude=lost+found --exclude=dev/* --exclude=proc/* --exclude=run/* \
    --exclude=sys/* --exclude=tmp/* --exclude=mnt/* --exclude=media/* \
    --exclude=opt/backup/* \
    .

# Ensure the backup file is not empty before proceeding with upload
if [ ! -s "$BACKUP_DIR/backup-$BACKUP_DATE.tar.gz" ]; then
    echo "Backup file is empty. Exiting."
    exit 1
fi

# Cleanup old backups
file_count=$(ls -t "$BACKUP_DIR" | wc -l)
if [ "$file_count" -gt "$BACKUP_HISTORY" ]; then
    ls -t "$BACKUP_DIR" | tail -n +"$((BACKUP_HISTORY + 1))" | xargs rm --
    if [ $? -ne 0 ]; then
        echo "No old backups removed"
    else
        echo "Old backup files removed"
    fi
fi
