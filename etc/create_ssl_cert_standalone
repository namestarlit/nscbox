#!/usr/bin/env bash
# Creates an SSL Certificate using certbot

# Check if running as root user
if [[ $EUID -ne 0 ]]; then
    echo 'Please run this script as root or sudo'
    exit 1
fi

# Check if Certbot is not installed
if ! command -v certbot &> /dev/null; then
    # Install Certbot
    echo "Installing Certbot..."
    apt-get update
    apt-get install -y certbot
else
    echo "Certbot is already installed."
fi

# Check command-line arguments
if [ $# -ne 2 ]; then
    SCRIPT_NAME=$(basename "$0")
    echo "Usage: ./$SCRIPT_NAME YOUR_DOMAIN YOUR_EMAIL"
    echo "eg: ./$SCRIPT_NAME example.com youremail@gmail.com"
    exit 1
fi

DOMAIN="$1"
EMAIL="$2"

service nginx stop

# Generate the certificate
echo "Generating SSL certificate for $DOMAIN..."
certbot certonly -v --standalone -d "$DOMAIN" --non-interactive --agree-tos --email "$EMAIL"
#certbot certonly --manual --preferred-challenges dns -d "$DOMAIN" --email "$EMAIL"

# Check if the certificate was generated successfully
if [ $? -eq 0 ]; then
    # Create PEM file to use
    echo "Creating PEM file..."
    CERT_PATH="/etc/letsencrypt/live/$DOMAIN"
    PEM_PATH="/etc/ssl/$DOMAIN/$DOMAIN.pem"
    
    if [ -f "$CERT_PATH/fullchain.pem" ] && [ -f "$CERT_PATH/privkey.pem" ]; then
        mkdir -p "/etc/ssl/$DOMAIN"
        cat "$CERT_PATH/fullchain.pem" "$CERT_PATH/privkey.pem" > "$PEM_PATH"
        echo "SSL certificate created and configured for $DOMAIN."
    else
        echo "Error: Fullchain or privkey not found. Certificate might not have been generated successfully."
    fi
else
    echo "Error: Certificate generation failed."
fi

# Start Nginx
service nginx start
